set nohidden
set drawbox
# says it's unknown option
# set color256
set icons
set tabstop 4
set period 1
set info size
set dircounts

cmd fzf_jump ${{
   res="$(rg --files | fzf --reverse --header='Jump to location')"
   if [ -f "$res" ]; then
     cmd="select"
   elif [ -d "$res" ]; then
     cmd="cd"
   fi
lf -remote "send $id $cmd \"$res\""
}}
map o :fzf_jump


### # define a custom 'delete' command
### cmd delete ${{
###     set -f
###     printf "$fx\n"
###     printf "delete?[y/n]"
###     read ans
###     [ $ans = "y" ] && rm -rf "$fx"
### }}
### map D delete

# define a custom 'delete' command
cmd delete ${{
    files=$(printf "$fx" | tr '\n' ';')
    set -f
    printf "CONFIRM DELETING: $fx\n"
    printf "[y/n]"
    read ans
    if [ "$ans" = "y" ]; then
        while [ "$files" ]; do
            # extract the substring from start of string up to delimiter.
            # this is the first "element" of the string.
            file=${files%%;*}

            rm -rf "$(basename "$file")"
            # if there's only one element left, set `files` to an empty string.
            # this causes us to exit this `while` loop.
            # else, we delete the first "element" of the string from files, and move onto the next.
            if [ "$files" = "$file" ]; then
                files=''
            else
                files="${files#*;}"
            fi
        done
    fi
}}
map D delete


cmd touch ${{
    touch "$1"
}}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# dragon
cmd dragon %dragon-drag-and-drop -a -x $fx
cmd dragon-stay %dragon-drag-and-drop -a $fx
cmd dragon-individual %dragon-drag-and-drop $fx
cmd cpdragon %cpdragon
cmd mvdragon %mvdragon
cmd dlfile %dlfile

# Dragon Mapping
map adr dragon
map ads dragon-stay
map adi dragon-individual
map adm mvdragon
map adc cpdragon
map adl dlfile

map gf cd ~/Library/Fonts
map gc cd ~/.config
map gd cd ~/Downloads

