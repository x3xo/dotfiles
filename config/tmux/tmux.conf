# TODO: uncomment if you install zsh with homebrew
# set-option -g default-shell /usr/local/bin/zsh

# need this for alacrity or it crashes when you try to copy. Side effect, doesn't copy to mac clipboard.
# set -g set-clipboard off

set-option -g status-position bottom

# options ["tmux-256color", "xterm-256color", "screen-256color"]
# set -g default-terminal "tmux-256color"
set -g default-terminal "xterm-256color"

# enable full color in tmux and vim
set-option -ga terminal-overrides ",xterm-256color:Tc"

# tried this to fix neovim rendering in tmux but it didn't help
# set-option -ga terminal-overrides ",xterm-256color:Tc"

bind r \
    source-file ~/.config/tmux/tmux.conf\;\
    display-message "...CONFIG RELOADED..."

bind e \
    move-window -r\;\
    display-message "Windows reordered..."

# prefix key
set-option -g prefix C-g
unbind-key C-b
# bind-key C-g send-prefix


# C-g C-g would switch between lastwindow similar to C-a C-a in screen
bind-key C-g last-window

# Set that stupid Esc-Wait off, so VI works again
set-option -sg escape-time 0

# set message display time
set-option -g display-time 1000

# split
bind | split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind \; split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind \' split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind _ split-window -v -c '#{pane_current_path}'  # Split panes vertically
bind - split-window -v -c '#{pane_current_path}'  # Split panes vertically

# unbind-key C-\

bind-key -n C-\\ split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind-key -n C-\' split-window -h -c '#{pane_current_path}'  # Split panes horizontal

# bind-key -n C-Space resize-pane -Z
bind-key -n C-_ split-window -v -c '#{pane_current_path}'  # Split panes vertically
bind-key -n C-- split-window -v -c '#{pane_current_path}'  # Split panes vertically

# toggle status line
bind u set status

# switch windows alt+number. Disable if you want to use ranger Alt-NUM for tabs
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

bind-key -n M-z resize-pane -Z

# doesn't work. PS: seems to work fine in iTerm. Maybe it doesn't work on linux
unbind-key -n M-Left
unbind-key -n M-Left
bind-key -n M-Left select-window -p
bind-key -n M-Right select-window -n

bind-key -n M-L  swap-pane -U # alt-shift-l
bind-key -n M-H  swap-pane -D # alt-shift-h

bind-key -n M-i display-popup -E "~/.config/tmux/scripts/tmux-sessionizer"

bind-key W display-popup -E "\
    tmux list-windows -F '#{?window_active,,#{session_name}:#{window_index}:#{window_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-window --delimiter : --preview 'tmux capture-pane -pt {1}:{2}' |\
    sed 's/:[^:]*$//' |\
    xargs tmux select-window -t"

bind-key S display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session |\
    xargs tmux switch-client -t"

bind-key -n M-o display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session |\
    xargs tmux switch-client -t"

# TODO: does this even work
# bind-key -n S-Right send-keys C-e

# meta t and w for opening and closing tabs "windows"
bind-key -n M-t new-window
# bind-key -n M-w kill-window
# bind -n M-w kill-pane
# -n means you don't have to press prefix.
# commented because it is too dangerous
# bind-key -n M-w kill-pane
bind-key -n M-w confirm-before -p "kill-pane #P? (y/n)" kill-pane

# pane selection. Disabled so I can use those bindings in vim diff
bind -n C-Left select-pane -L
bind -n C-Right select-pane -R
bind -n C-Up select-pane -U
bind -n C-Down select-pane -D

bind-key -n M-h resize-pane -L 5
bind-key -n M-l resize-pane -R 5
bind-key -n M-k resize-pane -U 5
bind-key -n M-j resize-pane -D 5

# enable mouse by default
set -g mouse on

# Toggle mouse on with prefix m
bind m \
  set -g mouse on \;\
  display 'Mouse: ON'

# Toggle mouse off with prefix M
bind M \
  set -g mouse off \;\
  display 'Mouse: OFF'

# disable right click menu
unbind -n MouseDown3Pane

# bind-key -n F2 send-keys 'echo "pane 2"'

# show message log
# unbind F1
bind-key -n F1 show-messages

# rename window
unbind F2
bind-key -n F2 command-prompt -p " name window:" "rename-window '%%'"

# unbind "M-F2"
# bind-key -n "M-F2" command-prompt -p " name session:" "rename-session '%%'"

# show pane/window selector
# unbind F4
# bind-key -n F4 choose-tree -GZ

# toggle typing in all panes mode
unbind F7
bind-key -n F7 set-window-option synchronize-panes\;\
  display-message " synchronize-panes is now #{?pane_synchronized,ON,OFF}"
# bind-key -n F7 setw synchronize-panes \;\
#   display-message "toggled synchronize-panes"

# paste data from copy buffer
# unbind F9
# bind-key -n F9 paste-buffer

# list copy buffers
# unbind F10
# bind-key -n F10 list-buffers

# show list of buffers and paste the one you select
# unbind F12
# bind-key -n F12 choose-buffer

# even out panes
# bind-key -n M-e resize-pane -Z
unbind-key -n M-e
bind-key -n M-e resize-pane -x 50%\;\
  resize-pane -y 50%

bind-key -n M-z resize-pane -Z

# set keys for command prompt mode
set-option -g status-keys vi

##   ### tmux copy paste. Use vim keybindings in copy mode
setw -g mode-keys vi

# copy paste like vim when in copy-mode (reattach-to-user-namespace no longer required)
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel

bind-key g copy-mode

# TODO: figure out how to do this
# bind-key -T copy-mode-vi 'C-h' "send-keys C-h" "select-pane -L"

set -w -g wrap-search off

set-option -g bell-action any
# set-option -g set-titles on
# set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)
set-option -g visual-bell on

# start window index of 1 instead of 0
set-option -g base-index 1

# Start panes at 1 instead of 0. tmux 1.6 only
setw -g pane-base-index 1

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# kill pane without warning - prefix k
# bind k kill-pane

# bind h previous-window

# set -g history-limit 4096
set -g history-limit 50000

setw -g aggressive-resize on

# don't let the shell rename window title automatically. You can rename with prefix :rename-window 'window name'
set-option -g allow-rename off

# option to rename windows or panes based on what is currently running in them
set-option -g automatic-rename off

unbind M-b

# new tab. Bound to CMD-t from iterm
bind t new-window

# bind-key -n M-n new-session
bind-key -n M-n next-window
bind-key -n M-C-l next-window
bind-key -n M-C-h previous-window

# switch to previous and next session
bind-key -n M-N switch-client -n
bind-key -n M-P switch-client -p

bind-key -n M-\; command-prompt -p " name session:" "rename-session '%%'"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

## Join windows: <prefix> s, <prefix> j
# bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
# bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Search back to last prompt (mnemonic: "[b]ack"); searches for non-breaking
# space in prompt.
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "➜ "
# bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward ""
# bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "╰─❯"

# search in pane
bind-key -n M-/ command-prompt -p " search for:" "copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward '%%'"

# view man page in a vertical split
# bind-key / command-prompt -p " look at MAN page for:" "split-window -h 'exec man %%'"
bind-key / command-prompt -p " search for:" "copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward '%%'"

# set-option -g status-utf8 on
set-option -g status-justify left

# set border style single | double | heavy | simple | number | double
set-option -g pane-border-lines single

# COLORS start
# TMUX_DARK="#132129"

# dark theme active windows
# everforest
# TMUX_MEDIUM="#475258"

# gruvbox
# TMUX_MEDIUM="#504945"


# nordic
# TMUX_MEDIUM="#3b4252"

# yorumi
# TMUX_MEDIUM="#1d202b"
TMUX_MEDIUM="#0e293f"

# rose-pine
# TMUX_MEDIUM="#084366"

# night owl
# TMUX_MEDIUM="#0e293f"

# duskfox
# TMUX_MEDIUM="#373354"


# catppuccin
# TMUX_MEDIUM="#2a2b3c"

# ayu
# TMUX_MEDIUM="#084366"

# kanagawa
# TMUX_MEDIUM="#363646"

# TMUX_MEDIUM="#242634"

# TMUX_MEDIUM=colour0
# TMUX_MEDIUM="#1b2733"
# TMUX_MEDIUM="#475258"

# light theme active windows
# TMUX_MEDIUM=colour251

TMUX_LIGHT="#50819E"
TMUX_CYAN="colour6"
TMUX_FADED="colour0"
TMUX_ACTIVE="#f6c177"
TMUX_BG="colour0"
TMUX_TOKYO_BG=black

# TMUX_AYU_BG="#10141c"
# TMUX_AYU_BG="#0a0e14"
# TMUX_AYU_BG=colour0

# default status line colors
# set -g status-style "bg=black"
# blend in status line
set -g status-style ""

# rose-pine
# set-option -g status-fg red

# everforest
# set-option -g status-fg colour0

# ayu
set-option -g status-fg "#3e4b59"

set-option -g status-left-length 40

# active border
# set-option -g pane-active-border-style fg=colour8,bg=$TMUX_AYU_BG
set-option -g pane-active-border-style fg=colour1

# inactive border
set-option -g pane-border-style fg=colour8
# set-option -g pane-border-style fg=colour8,bg=$TMUX_AYU_BG

# refresh status every 2 seconds
set -g status-interval 2


set -g copy-mode-match-style fg=#000000,bg=#ffffff

set -g copy-mode-mark-style bg=#ff0000
set -g copy-mode-current-match-style fg=#000000,bg=#ff0000


# set -g status-right-style fg=$TMUX_FADED
set -g status-right '#(date +"%F %I:%M %p") '

set -g status-left-length 100

# set -g status-left ' #[bg=red,fg=black]#{?client_prefix, P,#[default] P} #[default] #[fg=black]#{?pane_in_mode,#[bg=yellow] #{pane_mode},} #[default] #{?#{==:#(is_tomcat_on),yes},#[fg=green][Tomcat:8080,#[fg=red][Tomcat OFF}] #{?#{==:#(is_nginx_on),yes},#[fg=green][NGINX:8081,#[fg=red][NGINX OFF}] #[default] #[fg=#355467]cwd: #{pane_current_path}/'
# set -g status-left ' [#S] #[bg=red,fg=colour16]#{?client_prefix, P,#[default] P} #[default] #[fg=colour16]#{?pane_in_mode,#[bg=yellow] #{pane_mode},} #[default] cwd: #{pane_current_path}/ '
# TODO: add pane in mode check like this #{||,#{pane_in_mode},#{alternate_on}}

# set -g status-left-style fg=$TMUX_FADED
# set -g status-left '#[fg=red][#S]#[default] #[bg=red,fg=colour16]#{?client_prefix, P,#[default] P} #[default] #[fg=colour16]#{?pane_in_mode,#[bg=yellow] #{pane_mode},} #[default] '
# set -g status-left "#[fg=red,bg=$TMUX_MEDIUM] #S #[default] #[bg=red,fg=colour16]#{?client_prefix, P,#[default] P} #[default] #[fg=colour16]#{?pane_in_mode,#[bg=yellow] #{pane_mode},} #[default] "
set -g status-left "#[bg=red,fg=colour0]#{?client_prefix, #S,#[default] #S} #[default] #[fg=colour0]#{?pane_in_mode,#[bg=yellow] #{pane_mode},} #[default] "

# non-active window format and style
setw -g window-status-format "#[fg=$TMUX_LIGHT] #I:#[fg=red]#F#[fg=colour7]#W "

# active window style
setw -g window-status-current-format "#[fg=$TMUX_LIGHT,bg=$TMUX_MEDIUM] #I:#[fg=red]#F#[fg=colour7,bg=$TMUX_MEDIUM]#W "

# command mode in insert mode and messages line
# set-option -g message-style fg=yellow,bg=$TMUX_MEDIUM
# set-option -g message-style fg=yellow,bg=black
# set -g message-style bg=colour3,fg=colour16

# command mode in normal mode
set -g message-command-style bg=colour2,fg=colour16

#window mode
setw -g mode-style bg=colour6,fg=colour0
# setw -g mode-style bg=colour6,fg=colour16

# show edit mode vs vim mode on command line
set -g message-command-style fg=blue,bg=black
